// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  name     String?
  posts    Post[]

  followers FollowerOnFollowed[] @relation("follower")
  followed  FollowerOnFollowed[] @relation("followed")

  profile          Profile?
  role             Role      @relation(fields: [roleName], references: [name])
  roleName         String    @default("USER")
  authorMessages   Message[] @relation("author")
  receiverMessages Message[] @relation("receiver")
}

model FollowerOnFollowed {
  id         Int  @id @default(autoincrement())
  follower   User @relation("follower", fields: [followerId], references: [id])
  followerId Int
  followed   User @relation("followed", fields: [followedId], references: [id])
  followedId Int
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String?
  createdAt  DateTime @default(now())
  author     User     @relation("author", fields: [authorId], references: [id])
  authorId   Int
  receiver   User     @relation("receiver", fields: [receiverId], references: [id])
  receiverId Int
}

model Role {
  name  String @id @default("USER")
  users User[]
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}
